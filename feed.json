{
    "version": "https://jsonfeed.org/version/1",
    "title": "Turkmenson",
    "description": "",
    "home_page_url": "https://turkmenson.com",
    "feed_url": "https://turkmenson.com/feed.json",
    "user_comment": "",
    "icon": "https://turkmenson.com/media/website/ahmetson.png",
    "author": {
        "name": "Medet Ahmetson"
    },
    "items": [
        {
            "id": "https://turkmenson.com/notes-on-practical-deep-learning-launching.html",
            "url": "https://turkmenson.com/notes-on-practical-deep-learning-launching.html",
            "title": "Notes on &quot;Practical deep learning&quot;: launching",
            "summary": "Chapter 2: Production Start with the objective when designing your model. For example, Google started with the objective: \"What is the user's main objective in typing in a search query?\" This led to the aim to \"show the most relevant search result.\" The next step&hellip;",
            "content_html": "<h2>Chapter 2: Production</h2>\n<p>Start with the objective when designing your model.</p>\n<p>For example, Google started with the objective: \"<em><span style=\"text-decoration: underline;\">What is the user's main objective in typing in a search query?</span></em>\" This led to the aim to \"<span style=\"text-decoration: underline;\"><em>show the most relevant search result.</em></span>\"</p>\n<p>The next step is to determine what actions you can take to achieve the objective. In Google's case, it was ranking search results.</p>\n<p>The third step is determining what new data you need for the actions. In Google's case, what new data would they need to produce such a ranking?</p>\n<p>They realized that the implicit information regarding which pages linked to which other page could be useful for this purpose.</p>\n<p>We begin thinking about building a predictive model after these three steps. The objective, levers, the data we have, and the data we need determine the model we make. The models will take the levers and uncontrollable variables as their inputs; the output can be combined to predict the final state of the objective.</p>\n<h3>Recap by answering the questions</h3>\n<ol>\n<li>If the images for the bear classifier are from the game, then the app won't work because it was trained with the photo of the real bears.</li>\n<li>The text models cannot understand the semantics. This could lead to incorrect predictions.</li>\n<li>Text models could be used to troll the internet to spread disinformation.</li>\n<li>Usage of AI doesn't guarantee 100% results. It's especially critical with the medical reports. One solution is to work en-par with the people. The highly predictive outputs could be automated. For less predicted outcomes, we can do a manual check.</li>\n<li>The AI is good at high cardinality tabular data. The high cardinality means it's something that contains ample discrete choices.</li>\n<li>The recommendation systems work with user-generated behaviors. It recommends similar products from other sales. But it doesn't mean users didn't see them or may want something others didn't pick yet.</li>\n<li>Drivetrain approach: a) define an objective. b) define actions to reach the objective. c) define the data you need for the actions.</li>\n<li>Drivetrain approach for the video recommendation system: a) keep users in the platform. b) find liked videos like this from people of similar taste. c) create a data of liked data.</li>\n<li>The DataLoader class prepares data for training from unprepared data.</li>\n<li>To create a DataLoader, we need four things: a) What kind of data are we working with: images and text? b) How do you get those data: from files, CSV, or SQL? c) How do you label the items by filename? d) How to create a validation set: split items randomly by a seed.</li>\n<li>The splitter parameter of DataLoader describes how to get the validation set from the items list.</li>\n<li>The splitter takes two arguments: the percentage of items in the validation set and a seed to generate a random list.</li>\n<li>To determine independent variables, we use X. To represent dependent variables, we use Y.</li>\n<li>When images have different sizes, we need to normalize them—crop, pad, or squish.</li>\n<li>Data augmentation creates variants of the item by applying transforming functions. It helps to increase the amount of training set.</li>\n<li>Item transformers apply a function to each data. Batch transformers use the function of a whole batch.</li>\n<li>The confusion matrix shows a table of the training results. It helps to debug the data we used for training.</li>\n<li>The export function saves the architecture and model parameters together.</li>\n<li>To use a prediction model instead for training is called inference.</li>\n<li>IPython widgets are GUI components combining JavaScript and Python codes.</li>\n<li>we may use CPU in production since we work with one item at a time. In training, we may use GPU to accelerate the process.</li>\n<li>If a model is on a server, then there is a risk of working with confidential user data. Or network latency may slow down the prediction.</li>\n<li>the camera might capture the bears from different angles for a bear classifier, but it didn't work with the night vision. The camera may have low resolution.</li>\n<li>Out of domain is when an image for inference is not in a category of images we used for training.</li>\n<li>The domain shift is when the type of data changes over time.</li>\n<li>Three deployment process steps: a) export model for inference. b) create a UI. c) host the model.</li>\n</ol>\n<hr>\n<p>Objective: Understand the text in depth. Users should not be distracted.</p>\n<p>Action: Track all words users encounter.</p>\n<p>Then, get the description and insert it into the context. If it's a link, get a summary and add it. </p>\n<p>Data: track all words the user knows. Track how often he read and keep the terminology until it won't increase in appearance.</p>\n<p>What should happen if it went out? Everyone on the internet uses it.</p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "technology",
                   "ai-notes",
                   "ai"
            ],
            "date_published": "2023-12-22T16:41:47+07:00",
            "date_modified": "2023-12-22T16:41:47+07:00"
        },
        {
            "id": "https://turkmenson.com/programming-language-t.html",
            "url": "https://turkmenson.com/programming-language-t.html",
            "title": "Programming Language: T",
            "summary": "https://github.com/ahmetson/tpl A programming language with the Turkmen language syntax.",
            "content_html": "<p><a href=\"https://github.com/ahmetson/tpl\">https://github.com/ahmetson/tpl</a></p>\n<p>A programming language with the Turkmen language syntax.</p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "project",
                   "programming language"
            ],
            "date_published": "2023-12-21T18:36:19+07:00",
            "date_modified": "2023-12-21T18:36:29+07:00"
        },
        {
            "id": "https://turkmenson.com/programming-language-rigidity.html",
            "url": "https://turkmenson.com/programming-language-rigidity.html",
            "title": "Programming Language: Rigidity",
            "summary": "https://github.com/ahmetson/rigidity A secure version of Solidity to write smartcontracts. It's a type driven inspired by programming languages such as Idris.",
            "content_html": "<p><a href=\"https://github.com/ahmetson/rigidity\">https://github.com/ahmetson/rigidity</a></p>\n<p>A secure version of Solidity to write smartcontracts.</p>\n<p>It's a type driven inspired by programming languages such as Idris.</p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "project",
                   "programming language"
            ],
            "date_published": "2023-12-21T18:35:19+07:00",
            "date_modified": "2023-12-21T18:35:50+07:00"
        },
        {
            "id": "https://turkmenson.com/game-para-para.html",
            "url": "https://turkmenson.com/game-para-para.html",
            "title": "Game: Para-para",
            "summary": "https://ahmetson.github.io/para-para/ A demo of the para para. A new gameplay for the match 3. Match the elements and collect the chemical elements faster than the opponent. Prevent the opponent from containing his chemical elements if he is closer.",
            "content_html": "<p><a href=\"https://ahmetson.github.io/para-para/\">https://ahmetson.github.io/para-para/</a></p>\n<p>A demo of the para para. A new gameplay for the match 3.</p>\n<p>Match the elements and collect the chemical elements faster than the opponent. Prevent the opponent from containing his chemical elements if he is closer.</p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "project",
                   "game"
            ],
            "date_published": "2023-12-21T18:26:59+07:00",
            "date_modified": "2023-12-21T18:26:59+07:00"
        },
        {
            "id": "https://turkmenson.com/game-serdar.html",
            "url": "https://turkmenson.com/game-serdar.html",
            "title": "Game: Serdar",
            "summary": "Demo: https://github.com/ahmetson/serdar Source Code: https://github.com/ahmetson/serdar-source A mobile educational game that teaches math. There was a Turkmen village under the mountains. An ally of the town called out for a defense as all men went to the rescue. Another village belonged to the wealthiest man in&hellip;",
            "content_html": "<p>Demo: <a href=\"https://github.com/ahmetson/serdar\">https://github.com/ahmetson/serdar</a></p>\n<p>Source Code: <a href=\"https://github.com/ahmetson/serdar-source\">https://github.com/ahmetson/serdar-source</a></p>\n<p>A mobile educational game that teaches math. </p>\n<h2>Story</h2>\n<p>There was a Turkmen village under the mountains. An ally of the town called out for a defense as all men went to the rescue.</p>\n<p>Another village belonged to the wealthiest man in the world. He loved the daughter of the Chief. But the village Chief's daughter didn't respond to the richest man's love. </p>\n<p>When all the men left the village, the world's richest man attached the village to take the girl by force.</p>\n<p>The village sent a message to the men. A group of men led by Serdar returned to the town as soon as possible.</p>\n<p>The wealthiest man mercenaries to block the Serdar while catching the village with his force.</p>\n<h2>Gameplay</h2>\n<p>To not spend his time, help Serdar to choose the right path from multiple routes.</p>\n<p> </p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "project",
                   "game"
            ],
            "date_published": "2023-12-21T18:21:19+07:00",
            "date_modified": "2023-12-21T18:30:31+07:00"
        },
        {
            "id": "https://turkmenson.com/archived-projects.html",
            "url": "https://turkmenson.com/archived-projects.html",
            "title": "Archived projects",
            "summary": "WaiMaiPay Demo: https://github.com/ahmetson/wai-mai-pai Backend Source Code: https://github.com/ahmetson/api-wmp This was the project I was working on in 2017. WaiMaiPay is a delivery man's app that notifies the clients as it gets closer. Sometimes, people are not checking their smartphones. The delivery guy using it should call&hellip;",
            "content_html": "<p><strong>WaiMaiPay</strong></p>\n<p>Demo: <a href=\"https://github.com/ahmetson/wai-mai-pai\">https://github.com/ahmetson/wai-mai-pai</a></p>\n<p>Backend Source Code: <a href=\"https://github.com/ahmetson/api-wmp\">https://github.com/ahmetson/api-wmp</a></p>\n<p class=\"msg msg--warning\">This was the project I was working on in 2017.</p>\n<p>WaiMaiPay is a delivery man's app that notifies the clients as it gets closer. Sometimes, people are not checking their smartphones. The delivery guy using it should call the customer. WaiMaiPay calls the clients as delivery guy is closer.</p>\n<p>It tracks the distance by GPS.</p>\n<hr>\n<p><a href=\"https://github.com/ahmetson/smartcontract-practice\">https://github.com/ahmetson/smartcontract-practice</a></p>\n<p class=\"msg msg--warning\">A side project I tried to make for the interns</p>\n<p>Learn by creating real projects.</p>\n<hr>\n<p>Blockchain part: <a href=\"https://github.com/ahmetson/element-words-smartcontracts\">https://github.com/ahmetson/element-words-smartcontracts</a></p>\n<p>Game: <a href=\"https://github.com/ahmetson/element-words\">https://github.com/ahmetson/element-words</a></p>\n<p>A demo for the Neo hackathon.</p>\n<p><a href=\"https://www.youtube.com/watch?v=hVdgSr93qtg\">https://www.youtube.com/watch?v=hVdgSr93qtg</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=YGLvEwzZU5c\">https://www.youtube.com/watch?v=YGLvEwzZU5c</a></p>\n<p> </p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "project"
            ],
            "date_published": "2023-12-21T18:14:12+07:00",
            "date_modified": "2023-12-21T18:33:56+07:00"
        },
        {
            "id": "https://turkmenson.com/israel-vs-hamas-peaceful-solution.html",
            "url": "https://turkmenson.com/israel-vs-hamas-peaceful-solution.html",
            "title": "Israel vs Hamas: peaceful solution",
            "summary": "The 7th October 2023 event is a terrific event that occurred in Israel. What I want is for Israelis to show mercy for this. Because the politics that Hamas is playing versus what Israel is playing are on the different level. Israel is more powerful&hellip;",
            "content_html": "<p>The 7th October 2023 event is a terrific event that occurred in Israel.</p>\n<p>What I want is for Israelis to show mercy for this. Because the politics that Hamas is playing versus what Israel is playing are on the different level.</p>\n<p>Israel is more powerful than the established, prosperous nuclear power supported by the collective West, especially by the USA.</p>\n<p>To have a piece, we should have mercy. What I despise is that Israel is pretending to be merciful because mercy is not a punishment but forgiveness. Where is the mercy in the warnings when they want to punish Palestinians anyway?</p>\n<p>Another thing I despise in the politics of Israel is playing the victim when they are the aggressor against Palestinians.</p>\n<p>What is the real mercy is when in Africa, white people were ruling over the black people, some black people uprised against them. They used all methods to be heard—mainly bombing near the schools.</p>\n<p>Eventually, they took the victory and brought justice to the black people by giving them the same rights as white people. Nelson Mandela, the leader of this uprising, was named Person of the Year. He is respected by the West, which didn't focus too much on his bombings.</p>\n<p>What is the solution for Israel giving up half of the land to the Palestinians? To avoid revenge and hatred from their side, Israel, as the wealthiest country, could compensate with money by helping to build Palestine by modernizing it.</p>\n<p>Rather than spending much on the military budget, they could pay more on building Palestine. Jews would not be richer and have a comfortable life as today, but in return, they would get peace, and they wouldn't have to fear danger behind the border.</p>\n<hr>\n<p>When a girl X breaks up with a boyfriend and feels a massive hatred in her heart, she casts on porn or goes to a club to have nights with dozens of people. You can't have mercy on such kind of people too much.</p>\n<p>When girl Y is sent to trade her body at age 15 by her alcoholic parents, the girl is doing the same bad, unjustified things as girl X. But you should have mercy on girl Y because of the conditions that created it.</p>\n<p> </p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "people",
                   "Palestine",
                   "Israel"
            ],
            "date_published": "2023-12-21T17:31:27+07:00",
            "date_modified": "2023-12-21T17:31:27+07:00"
        },
        {
            "id": "https://turkmenson.com/notes-on-practical-deep-learning-for-coders.html",
            "url": "https://turkmenson.com/notes-on-practical-deep-learning-for-coders.html",
            "title": "Notes on &quot;Practical Deep Learning for Coders&quot;",
            "summary": "31 October 2023 Course: https://course.fast.ai/ Book: https://github.com/fastai/fastbook Deep Learning is a computer technique to extract and transform data using multiple neural network layers. Top used use cases: In 1943, Warren McCulloch and Walter Pitts developed a mathematical model of artificial neurons. It's declared in \"A&hellip;",
            "content_html": "<p><em>31 October 2023</em></p>\n<p class=\"msg msg--info\">Course: <a href=\"https://course.fast.ai/\">https://course.fast.ai/</a></p>\n<p class=\"msg msg--info\">Book: <a href=\"https://github.com/fastai/fastbook\">https://github.com/fastai/fastbook</a></p>\n<h2>Intro</h2>\n<p>Deep Learning is a computer technique to extract and transform data using multiple neural network layers.</p>\n<p>Top used use cases:</p>\n<ol>\n<li>NLP: answer questions; speech recognition; summarize; classify; find; search</li>\n<li>Computer Vision: satellite image interpretation, face recognition, caption</li>\n<li>Medicine: finding anomalies; counting features in slides; measuring; diagnosing</li>\n<li>Biology: classifying genomic tasks; analyzing cell interactions</li>\n<li>Image Generation</li>\n<li>Recommend Systems: search engines, home page layout, product recommendation</li>\n<li>Playing Games</li>\n<li>Robotics</li>\n<li>Financial, Logistics, etc...</li>\n</ol>\n<p>In 1943, Warren McCulloch and Walter Pitts developed a mathematical model of artificial neurons. It's declared in \"<em>A logical calculus of the ideas immanent in Neurous Activity</em>.\"</p>\n<p>The neuron could be represented as addition and thresholding.</p>\n<figure class=\"align-center\"><img loading=\"lazy\"  src=\"https://www.researchgate.net/publication/258372123/figure/fig1/AS:374245319299072@1466238445241/Mathematical-model-of-artificial-neuron.png\" alt=\"Mathematical model of artificial neuron | Download Scientific Diagram\" width=\"239\" height=\"166\" data-is-external-image=\"true\"></figure>\n<p>Frank Rosenblatt gave artificial neurons the ability to learn. He even created the first device on this principle: <strong>Mark I Perceptron</strong>.</p>\n<blockquote>\n<p>We are now about to witness the birth of such a machine - capable of perceiving, recognizing, and identifying the surroundings without any human training or context.</p>\n<p class=\"align-right\">\"The Design of an Intelligent Automata\"</p>\n<p class=\"align-right\">Frank Rosenblatt</p>\n</blockquote>\n<p>Marvin Minsky and Seymour Papert wrote a book called \"<em>Perceptrons</em>.\" They showed that the device needs multiple layers to learn simple mathematical functions.</p>\n<p>Perhaps the most pivotal work in neural networks was the \"<em>Parallel Distributed Processes</em>\" by David Rumelhart, James McCallen, and the PDP Research Group, released in 1986.</p>\n<p>PDP approach for the programming framework defined requires:</p>\n<ol>\n<li>process unit sets</li>\n<li>state of activation</li>\n<li>output function for each unit</li>\n<li>connectivity pattern among units</li>\n<li>propagation rule for propagating through the network of connectivities</li>\n<li>activation rule for combining inputs impinging on a unit with the current state of that unit to produce output for the unit</li>\n<li>learning rule whereby patterns of connectivity are modified by experience</li>\n<li>an environment where PDP must operate</li>\n</ol>\n<p>Modern Neural Networks use an approach similar to PDP. </p>\n<p class=\"msg msg--info msg--highlight  \">The book says that the theoretical knowledge was misunderstood, and the issues held back the development until 2010. But also says that despite having two layers, it was too big and too slow to be helpful. Recent advancements in the hardware allowed training neural networks with more layers.</p>\n<p class=\"msg msg--info\">For learning, it is best to use Jupyter Notebooks. The Jupyter Notebooks are software that allows you to include assets and code together.</p>\n<p>The deep learning uses the neural networks. It's part of machine learning. The deep learning model process and its training apply to the general concepts of machine learning.</p>\n<p>Machine learning is another form of programming where instead of the algorithm, you write the desired output, and the software finds the path.</p>\n<p>The term \"machine learning\" was coined by Arthur Samuel from IBM in 1949. In his 1962 classic essay \"<em>Artificial Intelligence: A Frontier of Automation,</em>\" he wrote machine technique.</p>\n<p>Rather than describing each step to solve the task, show an example of the problem to solve. Then, let the program figure out the algorithm.</p>\n<hr>\n<p>There is an actual performance of weight assignment. Then, there is an automatic means of testing performance—a mechanism for improving performance by changing weight assignments.</p>\n<p>The weights are variables. The weight assignments are a choice of those variables. The program inputs are variables. </p>\n<p>In modern terminology, machine learning programs are called models.</p>\n<p>The weight assignment is the second input describing the actual input. In modern terminology, weight assignments are called model parameters.</p>\n<p>Automatic testing means you let two models work against each other. Actual performance is the desired result. After each iteration, you adjust the model to test the outcome.</p>\n<p>If you automate the iteration to adjust the model parameters, the program could learn from experience.</p>\n<p>This automatic iteration is called model training.</p>\n<p>Once the weights were adjusted, they became part of the model. </p>\n<p>The neural networks are mathematical functions. The mathematical proof called the Universal Approximation Theorem shows this function can solve any problem in theory.</p>\n<p>The general approach to adjusting weights is made via Stochastic Gradient Descent (SGD), a mathematical method.</p>\n<p>The model includes weight, a function producing results, and performance updating weights. The functional part is called architecture.</p>\n<p>Prediction is the result. The loss is the measurement of the performance. It's measured against the labels.</p>\n<p>Transformers are code that is applied during the training. There are item and batch transformers. The inputs are not used to train. Some part of the set is kept separated to test that training.</p>\n<p>The training input is called a training set, while testing data is used as a validation set. Over time, as the validation set is set, the model starts memorizing the labels. Thus, it doesn't find the generalizing patterns. This is called overfitting.</p>\n<p>Overfitting is the single, most important issue in the model training.</p>\n<p>Resnet is one of the architectures. It could have 18, 34, 50, 101 and 150 layers. The more layers mean training and with less data will be prone to overfitting.</p>\n<p>The model that has trained weights is called pre-trained model. It's better to build on the pre-trained models by changing some layers with yours. Using pre-trained model for a task different than what it was originally trained is called transfer learning.</p>\n<p>Fine tuning is a transfer learning technique where parameters of pretrained models update by additional epoch. Epoch is how many times the model looks at the data.</p>\n<p>Machine learning has some limitations:</p>\n<ol style=\"list-style-type: lower-alpha;\">\n<li>A model can not be created without data</li>\n<li>It can learn the patterns from input data</li>\n</ol>\n<hr>\n<h2>Deep Learning Vocabulary</h2>\n<p>Label - a data we are trying to predict</p>\n<p>Architecture - a template of a model we are tring to fit a model; an actual function</p>\n<p>Parameters - values in model that change what task it can do and updates throughout the training process.</p>\n<p>Fit - update the parameters such that predictions of model using input to match output labels. Also called Train.</p>\n<p>Fine Tune - special technique in transfer learning to update pre-trained model.</p>\n<p>Epoch - one complete task to pass through input data</p>\n<p>Loss - a measure how good model is using validation set</p>\n<p>Training set - data for training</p>\n<p>Validation set - data for measuring loss</p>\n<p>Overfitting - training remembers specific features of input than generalizing pattern.</p>\n<p>CNN - neural network for computer vision</p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "technology",
                   "ai-notes",
                   "ai"
            ],
            "date_published": "2023-12-21T16:38:40+07:00",
            "date_modified": "2023-12-21T17:17:23+07:00"
        },
        {
            "id": "https://turkmenson.com/phishing-by-vera-token.html",
            "url": "https://turkmenson.com/phishing-by-vera-token.html",
            "title": "Phishing by Vera token",
            "summary": "2 August 2021 Being myself in the crypto industry and as a developer, I never thought I would be scammed. But that happened. And it happened quickly. I was using https://farmfol.io/ to track my wallet balance. And saw that it has 100K USD. I thought&hellip;",
            "content_html": "<p>2 August 2021</p>\n<p><span style=\"font-weight: 400;\">Being myself in the crypto industry and as a developer, I never thought I would be scammed. But that happened. And it happened quickly.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">I was using </span><a href=\"https://farmfol.io/\"><span style=\"font-weight: 400;\">https://farmfol.io/</span></a><span style=\"font-weight: 400;\"> to track my wallet balance. And saw that it has 100K USD. I thought that someone deposited his tokens to me accidentally. So, I researched the token. The token is called Vera. And it’s domain name is </span><a href=\"http://thevera.io/\"><span style=\"font-weight: 400;\">http://thevera.io/</span></a><span style=\"font-weight: 400;\">.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">The website had a “claim” button. I clicked on it to approve my wallet. Then, I suddenly realized that they might withdraw my crypto wallet. It was on Binance bright chain, where transaction confirmation speed is 3-4 seconds. I was a few seconds late before the transaction was confirmed. As a result, I was screwed for 2BNB (~600$).</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">I tried to remove the token from my wallet but without luck. Then I tried to transfer tokens to an empty address, but that didn’t work either.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">Tokens are smart contracts where the token developer programs every token function. The developer of the Vera token puts a high fee on any transaction or completely rejects any method call.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">This case also proved my Blockchain idea that makes users own their wallets and accounts. What is the point of having a private key when the tokens in my balance are without my acknowledgment? Or when I can’t do anything with them because the developers decided like this.</span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">Solution: The Seascape blockchain will have one token with unlimited minting. When users create a new token, they allocate the part of the native token and add an alias name. Since the core part of the token is a native token, the transferring and burning of the token will be available for any user.</span></p>\n<p><span style=\"font-weight: 400;\">Besides that, since all tokens are backed by the native token, through the native token, users will be able to exchange tokens with each other without any dex.</span></p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "technology",
                   "phishing",
                   "blockchain"
            ],
            "date_published": "2023-12-21T16:03:45+07:00",
            "date_modified": "2023-12-21T16:03:45+07:00"
        },
        {
            "id": "https://turkmenson.com/rnb-blockchain-whitepaper.html",
            "url": "https://turkmenson.com/rnb-blockchain-whitepaper.html",
            "title": "RNB Blockchain whitepaper",
            "summary": "9th May 2021 Generating secure random numbers is a challenging task. By fast numbers, I mean that a) predicting what the next number is impossible, and b) It generates numbers without putting them in favor of one of the stakeholders. The nature of public blockchain,&hellip;",
            "content_html": "<p><em>9th May 2021</em></p>\n<h1><strong>OVERVIEW</strong></h1>\n<p><span style=\"font-weight: 400;\">Generating secure random numbers is a challenging task. By fast numbers, I mean that a) predicting what the next number is impossible, and b)  It generates numbers without putting them in favor of one of the stakeholders.</span></p>\n<p><span style=\"font-weight: 400;\">The nature of public blockchain, with its decentralized p2p architecture, is ideal for producing secure numbers.</span></p>\n<p><span style=\"font-weight: 400;\">This whitepaper discusses the implementation of secure random numbers using blockchain. </span></p>\n<h1><strong>GOALS OF THE PROJECT</strong></h1>\n<ol>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Free public random number generator</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Secure, where numbers are not predictable.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Generated numbers are stored in the database permanently for checking in the future</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Generated numbers are not programmed to drop specific numbers with high probability.</span></li>\n</ol>\n<h1><strong>RNG V 0.0 User-generated numbers</strong></h1>\n<p><span style=\"font-weight: 400;\">Since the creation of the blockchain takes some time, we decided to make a quick version of the RNG. This short version of the RNG blockchain is versioned as 0.0.</span></p>\n<p><span style=\"font-weight: 400;\">In this version, the nodes accessing the RNG send a random number in their transactions. The sum of all random numbers divided by all senders within the block is defined as a new Random number for the block.</span></p>\n<p><span style=\"font-weight: 400;\">The RNG V 0.0 will have the following transitions:</span></p>\n<ul>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Request a new Random number   (DONE)</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- accepts (one random number) in byte32 format. This number is used to generate a random number. To get a random number, the caller should stake some tokens.</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- returns another random number in byte32 format. It requires 0.01 RNG tokens to be cut from the staked RNG tokens.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Send a random number</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- accepts (one random number) in byte32 format. This transaction could be sent by participating validators only.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Stake a token</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- Stake 100 RNG tokens. It will register a user to generate a random number. A new stake will be added to the previous ones if a user has already staked tokens.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Get a staked token amount</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- accepts a wallet address</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- returns an amount of staked tokens for the user.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Change fee</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- accepts a new fee for requesting a Random Number and deadline (up to 24 hours in seconds and a minimum of 1 hour).</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">- whether this was accepted.</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">If ⅔ of the users call this transaction with the same fee, the fee for requesting payment will be updated.</span></li>\n</ul>\n<h1><strong>RNG V 1.0 THEORETICAL SPECIFICATIONS</strong></h1>\n<p><span style=\"font-weight: 400;\">How does the RNG blockchain work without going to the programming language and technology used in it?</span></p>\n<p><span style=\"font-weight: 400;\">The idea is that the RNG blockchain generates random numbers in every block of the blockchain.</span></p>\n<p><span style=\"font-weight: 400;\">All validators of the RNG blockchain must provide a unique wallet address for every block for consensus voting. The sum of all unique wallet addresses divided by the number of voters is the Generated Random number of that block. </span></p>\n<p> </p>\n<p><span style=\"font-weight: 400;\">We came up with three solutions to prove that the signature is nondeterministic.</span></p>\n<ol>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Any node that participates in the generation of random numbers also has a representative signature. This signature stakes 100 RNG tokens, which allows this node to participate in number generation. Any unique signature used once can be used to withdraw 50% of the staked RNG tokens per user from the blockchain within the next 30 days after usage of the signature. Suppose the unique signature is used for withdrawing a token. In that case, the representative node is kicked out from the participation of random number generation, while the rest of 50% of staked RNG tokens are redistributed among other stakeholders. </span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">So, it is in the interest of all stakeholders to try to find the signature or guess it for the other stakeholders to prevent them from cheating.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">The node client should always be public, meaning everyone could join the blockchain for random number generation without anyone’s permission. Since the sum of the hash of all wallets is changing dramatically even after the addition of one more signature, it will allow the blockchain to be unpredictable if many nodes connect to the blockchain from around the world.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">There is the option where anyone, whether a unique signature or representative signature or not related to the RNG signature, can put 1 RNG token, the future block number, and the possible value. If the value generated in the future in the block number is correct, the wallet address could take 50% of all stake RNGs in the blockchain. This will keep all stakes trying to put unpredictable signatures, while those who want to earn money will always try to check the blockchain for prediction. This will ensure that generated random numbers are safe.</span></li>\n</ol>\n<h2><strong>RNG Blockchain Technical Requirements</strong></h2>\n<p><span style=\"font-weight: 400;\">It is a blockchain in Cosmos Network created with Cosmos SDK on the tendermint core. RNG blockchain has the following features:</span></p>\n<ol>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">A lightweight client</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">States in key-value format: </span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">2.1. A list of all unique addresses of every representative address.</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">    Representative Account =&gt; array of unique addresses</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">    Unique address =&gt; representative</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">2.2 List all random numbers since block one, including unique addresses and their numbers.</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">     Block number =&gt; struct(random_address, array(unique addresses), unique_address_amount, proposer)</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">2.3 A list of representative addresses with their staked RNG tokens amount.</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">     Representative stake =&gt; stake amount</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">2.4 A balance of each address of RNG tokens that are not used for staking:</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">     Wallet address =&gt; balance</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">2.5 A prediction list for each block</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">     Block number =&gt; array of Structs(predicted_address, payment_address)</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">     Prediction reserves =&gt; balance.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">Functions such as</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">3.1 Stake RNG tokens to add a representative token to the data structure 2.3</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">3.2 A function to push unique address for generating random numbers, </span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">3.3 Generating random number by the sum of all unique addresses pushed to the server, </span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">3.4 Unstaking tokens with the representative address</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">3.5 Unstaking tokens with a unique address, which automatically distributes 50% of staked tokens to other token holders, while 50% goes to the individual address</span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">3.6 claim additional tokens for stakes that they got from other stake token distribution, </span><span style=\"font-weight: 400;\"><br></span><span style=\"font-weight: 400;\">3.7 Spend 1 RNG with the random number and the block to predict the upcoming number to withdraw 50% of all staked tokens.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">An easy RPC to fetch the random number by event broadcast or rest API.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">A bridge to the Ethereum blockchain where RNG tokens are minted. Bridge to transfer into or out from rng blockchain rng tokens.</span></li>\n<li style=\"font-weight: 400;\" aria-level=\"1\"><span style=\"font-weight: 400;\">an intelligent contract on the Ethereum blockchain locks RNGs transferred to the RNG blockchain.</span></li>\n</ol>\n<p><strong>RNG blockchain Technical implementation</strong></p>\n<p><span style=\"font-weight: 400;\">We edit the voter module by adding additional features, such as auto-generating the private keys that voters submit to the block (automatically by the module). The voter module will store the private keys in the local storage, encrypted by the voter’s primary signature.</span></p>\n<p><span style=\"font-weight: 400;\">We will also create a new rng-history module to store all the rng states. This module is connected to the voter module to get the voter’s signatures.</span></p>\n<p><span style=\"font-weight: 400;\">Finally, we edit the consensus module to connect to the rng-history module to write data into rng states.</span></p>\n<p><strong>RNG token</strong></p>\n<p><span style=\"font-weight: 400;\">RNG tokens are erc20 tokens on the Ethereum blockchain. USDT tokens back them. </span></p>\n<p><span style=\"font-weight: 400;\">1 usdt = 10 rng token. </span></p>\n<p><span style=\"font-weight: 400;\">If a user wants to mint 100 RNG tokens, he has to call the mint function of the RNG token. The mint function will lock ten USD on behalf of the user to issue RNG tokens.</span></p>\n<p><span style=\"font-weight: 400;\">If a user wants to take back his USDT tokens used to mint RNG tokens, then the user calls the burn method in the RNG token, which will burn RNGs while transferring the locked USDTs to the user.</span></p>\n<h1><strong>MILESTONES</strong></h1>\n<h2><strong>Write the whitepaper</strong></h2>\n<p><span style=\"font-weight: 400;\">Till 16th May, write all technical aspects of the RNG blockchain and RNG token.</span></p>\n<h2><strong>Write the Demo blockchain (without bridge)</strong></h2>\n<p><span style=\"font-weight: 400;\">Till the end of May 2021, write the RNG blockchain using Cosmos SDK.</span></p>\n<h2><strong>Write the RNG token</strong></h2>\n<p><span style=\"font-weight: 400;\">Till 10th June 2021, write the RNG token with mint and burn functions.</span></p>\n<h2><strong>Write the Bridge blockchain.</strong></h2>\n<p><span style=\"font-weight: 400;\">Till 20th June 2021, write the RNG bridge between the RNG blockchain and the Ethereum blockchain.</span></p>\n<h2><strong>Launch of the product</strong></h2>\n<p><span style=\"font-weight: 400;\">Till 30th June 2021, test the system and launch it.</span></p>\n<h2><strong>Write the Whitepaper 2.0 for the profitable version of the RNG blockchain</strong></h2>\n<p><span style=\"font-weight: 400;\">How do RNG blockchain nodes earn money? In the next version of the blockchain, this should be possible.</span></p>\n<p><br><br><br><br></p>",
            "author": {
                "name": "Medet Ahmetson"
            },
            "tags": [
                   "technology",
                   "project-rng",
                   "project",
                   "blockchain"
            ],
            "date_published": "2023-12-21T16:01:29+07:00",
            "date_modified": "2023-12-21T16:01:29+07:00"
        }
    ]
}
